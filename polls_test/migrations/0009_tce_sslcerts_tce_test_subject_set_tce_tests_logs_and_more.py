# Generated by Django 4.1.7 on 2023-04-03 12:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polls_test', '0008_alter_tce_answers_answer_question_id_tce_tests'),
    ]

    operations = [
        migrations.CreateModel(
            name='tce_sslcerts',
            fields=[
                ('ssl_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ssl_name', models.CharField(max_length=255)),
                ('ssl_hash', models.CharField(max_length=255)),
                ('ssl_end_date', models.DateTimeField()),
                ('ssl_user_id', models.BigIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='tce_test_subject_set',
            fields=[
                ('tsubset_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tsubset_type', models.SmallIntegerField(default=1)),
                ('tsubset_difficulty', models.SmallIntegerField(default=1)),
                ('tsubset_quantity', models.SmallIntegerField(default=1)),
                ('tsubset_answers', models.SmallIntegerField(default=0)),
                ('tsubset_test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests')),
            ],
        ),
        migrations.CreateModel(
            name='tce_tests_logs',
            fields=[
                ('testlog_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('testlog_user_ip', models.CharField(max_length=39, null=True)),
                ('testlog_answer_text', models.TextField(default='')),
                ('testlog_score', models.IntegerField(default=0)),
                ('testlog_creation_time', models.DateTimeField(default='')),
                ('testlog_display_time', models.DateTimeField(default='')),
                ('testlog_change_time', models.DateTimeField(default='')),
                ('testlog_reaction_time', models.BigIntegerField(default=0)),
                ('testlog_order', models.SmallIntegerField(default=1)),
                ('testlog_num_answers', models.SmallIntegerField(default=0)),
                ('testlog_comment', models.TextField(null=True)),
                ('testlog_question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_questions', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='tce_testuser_stat',
            fields=[
                ('tus_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tus_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='tce_user_groups',
            fields=[
                ('group_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='tce_usrgroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usrgrp_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_user_groups')),
                ('usrgrp_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_users')),
            ],
        ),
        migrations.CreateModel(
            name='tce_tsets_users',
            fields=[
                ('testuser_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('testuser_status', models.SmallIntegerField(default=0, unique=True)),
                ('testuser_creation_time', models.DateTimeField()),
                ('testuser_comment', models.TextField(null=True)),
                ('testuser_test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests', unique=True)),
                ('testuser_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_users', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='tce_testsslcerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tstssl_ssl_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_sslcerts')),
                ('tstssl_test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests')),
            ],
        ),
        migrations.CreateModel(
            name='tce_tests_users',
            fields=[
                ('testuser_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('testuser_status', models.SmallIntegerField(default=0, unique=True)),
                ('testuser_creation_time', models.DateTimeField()),
                ('testuser_comment', models.TextField(default='')),
                ('testuser_test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests', unique=True)),
                ('testuser_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_users', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='tce_tests_logs_answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logansw_selected', models.SmallIntegerField(default=-1)),
                ('logansw_order', models.SmallIntegerField(default=1)),
                ('logansw_position', models.BigIntegerField(null=True)),
                ('logansw_answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_answers')),
                ('logansw_testlog_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests_logs')),
            ],
        ),
        migrations.AddField(
            model_name='tce_tests_logs',
            name='testlog_testuser_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests_users', unique=True),
        ),
        migrations.CreateModel(
            name='tce_testgroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tstgrp_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_user_groups')),
                ('tstgrp_test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_tests')),
            ],
        ),
        migrations.CreateModel(
            name='tce_test_subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjset_subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_subjects')),
                ('subjset_tsubset_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls_test.tce_test_subject_set')),
            ],
        ),
        migrations.AddConstraint(
            model_name='tce_usrgroups',
            constraint=models.UniqueConstraint(fields=('usrgrp_user_id', 'usrgrp_group_id'), name='usersgroup'),
        ),
        migrations.AddConstraint(
            model_name='tce_testsslcerts',
            constraint=models.UniqueConstraint(fields=('tstssl_test_id', 'tstssl_ssl_id'), name='testsslinfo'),
        ),
        migrations.AddConstraint(
            model_name='tce_tests_logs_answers',
            constraint=models.UniqueConstraint(fields=('logansw_testlog_id', 'logansw_answer_id'), name='tests_logs_answers'),
        ),
        migrations.AddConstraint(
            model_name='tce_testgroups',
            constraint=models.UniqueConstraint(fields=('tstgrp_test_id', 'tstgrp_group_id'), name='testgroups'),
        ),
        migrations.AddConstraint(
            model_name='tce_test_subjects',
            constraint=models.UniqueConstraint(fields=('subjset_tsubset_id', 'subjset_subject_id'), name='tests_subjects'),
        ),
    ]
